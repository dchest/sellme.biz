#
#  Config for sellme.biz
#

# Redirect all HTTP to https://sellme.biz
server {
    listen 80;
    listen [::]:80;
    server_name sellme.biz www.sellme.biz;
		server_tokens	off;
		access_log	off;

    return 301 https://sellme.biz$request_uri;
}

server {
	listen		443 ssl;
	listen		[::]:443 ssl;
	server_name	sellme.biz www.sellme.biz;
	server_tokens	off;
	root            /var/www/sellme.biz;

	# Turn off access logging for privacy.
	access_log	off;

	#
	# TLS config based on Mozilla's recommentation:
	# at https://wiki.mozilla.org/Security/Server_Side_TLS#Nginx
	# (except for OCSP Stapling).
	#
	ssl_certificate			/etc/letsencrypt/live/sellme.biz/fullchain.pem;
	ssl_certificate_key		/etc/letsencrypt/live/sellme.biz/privkey.pem;
	ssl_dhparam			/etc/nginx/ssl/oakley-group-14.pem;
	ssl_session_timeout		5m;
	ssl_protocols 			TLSv1 TLSv1.1 TLSv1.2;
	ssl_ciphers			 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
	ssl_prefer_server_ciphers	on;
	ssl_session_cache		shared:SSL:50m;

	# Additional headers need to be cloned to every `location` below,
	# because nginx won't inherit it from `server`, which is kinda stupid.

	# Add HSTS header.
	add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload"; # 6 month

	# Allow scripts only from self.
	add_header Content-Security-Policy "script-src 'none'";

	# Disable framing from other origins.
	add_header X-Frame-Options "SAMEORIGIN";

    # Enable XSS protection.
    add_header X-XSS-Protection "1; mode=block";

    # Disable content-type sniffing.
    add_header X-Content-Type-Options "nosniff";

	# Redirect www to non-www.
	if ($host ~* ^www\.){
		rewrite ^(.*)$ $scheme://sellme.biz$1 permanent;
	}

	#
	# RSS Feed: redirect to FeedBurner.
	#
	# Must come before HTTPS redirection, since a lot of
	# feed readers can't handle TLS.
	#
	if ($http_user_agent !~ FeedBurner) {
		rewrite ^/rss/?$	http://feeds.feedburner.com/SellMe redirect;
		rewrite ^/rss/?(.*)/?$	http://feeds.feedburner.com/SellMe redirect;
		rewrite ^/feed/?$	http://feeds.feedburner.com/SellMe redirect;
		rewrite ^/feed/?(.*)/?$	http://feeds.feedburner.com/SellMe redirect;
		rewrite ^/wp-rss2.php$	http://feeds.feedburner.com/SellMe redirect;
		rewrite ^/wp-atom.php$	http://feeds.feedburner.com/SellMe redirect;
		rewrite ^/category/podcasts/feed/?(.*)$ http://feeds.feedburner.com/SellMe redirect;
	}

	#
	# Block Russian Government's related networks.
	# See https://github.com/AntiZapret/antizapret
	#
	deny 62.117.66.160/29;
	deny 78.108.192.0/20;
	deny 81.176.0.0/16;
	deny 85.142.52.0/24;
	deny 91.190.236.0/22;
	deny 91.224.182.0/23;
	deny 91.227.32.0/24;
	deny 91.236.22.0/23;
	deny 92.39.133.160/28;
	deny 94.199.64.0/21;
	deny 95.173.128.0/19;
	deny 109.207.0.0/20;
	deny 178.248.232.0/21;
	deny 178.237.206.0/24;
	deny 178.237.240.0/20;
	deny 193.105.14.0/24;
	deny 193.27.214.0/23;
	deny 193.47.146.0/24;
	deny 194.150.202.0/23;
	deny 194.165.22.0/23;
	deny 194.190.89.0/24;
	deny 194.226.22.0/23;
	deny 194.226.80.0/20;
	deny 194.226.116.0/22;
	deny 194.226.127.0/24;
	deny 194.85.30.0/24;
	deny 195.149.110.0/24;
	deny 212.42.32.0/19;
	deny 213.24.76.0/23;
	deny 89.108.112.0/20;
	deny 89.111.176.0/20;
	deny 91.219.192.0/22;
	deny 184.82.0.0/16;
	deny 194.85.88.0/23;
	deny 195.128.157.0/24;
	deny 213.232.192.0/18;

	#
	# Basics
	# ------
	#

	# Index
	index index.html index.htm;

	# 404 error
	error_page 404 /404.html;

	#
	# Optimizations
	# -------------
	#

	# Enable gzip compression
	gzip on;
	gzip_types text/plain text/xml text/css application/x-javascript application/javascript;
	gzip_vary on;

	# Images expire in 30 days.
	location ~* \.(?:ico|gif|jpe?g|png)$ {
		expires	   30d;
		add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload"; # 6 month
		add_header Content-Security-Policy "script-src 'none'";
		add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
        add_header Cache-Control public;
	}

	# Pages expire in 1 hour.
	location ~* \.(?:xml|txt|html|htm)$ {
		expires	   1h;
		add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload"; # 6 month
		add_header Content-Security-Policy "script-src 'none'";
		add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
		add_header Cache-Control public;
	}

	# Assets and fonts never expire.
	location /assets {
		expires    max;
		add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload"; # 6 month
		add_header Content-Security-Policy "script-src 'none'";
		add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
        add_header Cache-Control public;
	}

	location /fonts {
		expires    max;
		add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload"; # 6 month
		add_header Content-Security-Policy "script-src 'none'";
		add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
        add_header Cache-Control public;
	}

    # For Let's Encrypt
    location ~ /.well-known {
        allow all;
    }

	#
	# Cool URIs Don't Change.
	# (But when they change, we redirect.)
	# ------------------------------------
	#
	set $new_url "https://sellme.biz";


	# Sellme ran on multiple CMS since 2005. We'd like to keep links working.

	# WordPress
	#
	# Links were in the form of /YYYY/MM/DD/post_name/
	#
	# To get the current scheme, we remove day, append .html and replace
	# underscore with dashes: /YYYY/MM/post-name.html
	# But first we try .html.
	rewrite "^/([0-9]{4})/([0-9]{2})/([0-9]{2})/([^/]+)\.html$"	$new_url/$1/$2/$4.html	permanent;
	rewrite "^/([0-9]{4})/([0-9]{2})/([0-9]{2})/([^/]+)/?$"	$new_url/$1/$2/$4.html	permanent;
	# replace underscores with dashes (it will continue replacing until all done):
	rewrite "^/([0-9]{4})/([0-9]{2})/(.*)\_(.*)$" 		$new_url/$1/$2/$3-$4	permanent;
	# upload
	rewrite "^/wp-content/uploads/(.*)$"	$new_url/pics/$1	permanent;

	# Old
	rewrite "^/old/(.*)$"	$new_url/$1 permanent;

	# Webby
	#
	# Published only a few articles with Webby, redirect them.
	#
	rewrite ^/articles/essense.html$                 $new_url/2009/08/essense.html                  permanent;
	rewrite ^/articles/tableview-browsing.html$      $new_url/2009/04/tableview-browsing.html       permanent;
	rewrite ^/articles/ellipticlicense-preview.html$ $new_url/2009/03/ellipticlicense-preview.html  permanent;
	rewrite ^/articles/mosso-cloud-servers.html$     $new_url/2009/03/mosso-cloud-servers.html      permanent;
	rewrite ^/articles/change.html$	                 $new_url/2009/03/change.html                   permanent;

	# /article/
	rewrite ^/article/parallelnoe-zhulyo$		$new_url/2007/09/parallelnoe-zhulyo.html	permanent;
	rewrite ^/article/rugayu-sebya$			$new_url/2007/09/rugayu-sebya.html		permanent;
	rewrite ^/article/eshche-raz-posypayu-golovu-peplom$	$new_url/2007/09/eshche-raz-posypayu-golovu-peplom.html permanent;
	rewrite ^/article/pro-proshloe-i-budushchee-sellmeru$	$new_url/2007/10/pro-proshloe-i-budushchee-sellmeru.html permanent;
	rewrite ^/article/o-poleznosti-memoires$	$new_url/2007/11/o-poleznosti-memoires.html	permanent;
	rewrite ^/article/keln$				$new_url/2007/08/keln.html			permanent;
	rewrite ^/article/linus-torvalds-on-git$		$new_url/2007/12/linus-torvalds-on-git.html	permanent;
	rewrite ^/article/makedoniya$			$new_url/2007/10/makedoniya.html		permanent;
	rewrite ^/article/parallels-protiv-vmware-fusion$	$new_url/2007/08/parallels-protiv-vmware-fusion.html permanent;
	rewrite ^/article/sankt-peterburg$		$new_url/2007/06/sankt-peterburg.html	permanent;
	rewrite ^/article/zametka-o-programme-translateit-dlya-mac$	$new_url/2007/05/zametka-o-programme-translateit-dlya-mac.html	permanent;


	# /post/
	rewrite ^/post/12$	$new_url/2008/02/kak-ya-programmiroval-robota.html permanent;
	rewrite ^/post/15$	$new_url/2008/03/kak-organizovyvat-fajly.html permanent;

	rewrite ^/productive_email/$	$new_url/2005/03/kak-uvelichit-produktivnost-raboty-s-pochtoi.html permanent;
	rewrite ^/testimonials/$	$new_url/2005/03/otzyvy-polzovatelei.html permanent;

	# Site pages.
	rewrite ^/about/$		$new_url/about.html	permanent;
	rewrite ^/archives/$		$new_url/archive/	permanent;
	rewrite ^/contacts/$		$new_url/about.html	permanent;
	rewrite ^/contacts.html$	$new_url/about.html	permanent;

	# Password page. (Not recommended for use anymore).
	rewrite ^/p/?$	$new_url/password/password.html	  permanent;
	rewrite ^/p2/?$ $new_url/password2/password2.html permanent;
	rewrite ^/pi/?$ $new_url/password2/ios.html	  permanent;

	# Removed posts.
	#
	# Sometimes the information contained in posts becomes obsolete
	# and it's better addressed by some third-party website.
	#
	rewrite ^/2005/07/kak-poluchit-inn-fizicheskomu-litsu.html$ http://nalog.ru permanent;
}
